<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body class="bg-gray-100">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/dashboard" class="text-xl font-bold text-gray-800">Dashboard</a>
                    <span class="mx-2">/</span>
                    <h1 class="text-xl font-bold"><%= title %></h1>
                </div>
                <div class="flex items-center">
                    <span class="mr-4">Welcome, <%= user.full_name %></span>
                    <a href="/logout" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                        Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            
            <!-- Header with Create Button -->
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold">Agency Management</h2>
                <button onclick="openCreateModal()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    + Create Agency
                </button>
            </div>

            <!-- Alert Messages -->
            <div id="alert-container" class="mb-4"></div>

            <!-- Agencies Table -->
            <div class="bg-white shadow overflow-hidden sm:rounded-md">
                <% if (agencies.length > 0) { %>
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Agency</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Owner</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Domain</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stats</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="agencies-table-body" class="bg-white divide-y divide-gray-200">
                            <% agencies.forEach(agency => { %>
                                <tr id="agency-row-<%= agency.id %>">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div>
                                            <div class="text-sm font-medium text-gray-900"><%= agency.name %></div>
                                            <div class="text-sm text-gray-500"><%= agency.company_name || '-' %></div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm text-gray-900"><%= agency.owner.full_name %></div>
                                        <div class="text-sm text-gray-500"><%= agency.owner.email %></div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <%= agency.domain || '-' %>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <div>ðŸ‘¥ <%= agency._count.users %> users</div>
                                        <div>ðŸ’° <%= agency._count.subscriptions %> subscriptions</div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full <%= agency.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                            <%= agency.is_active ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <button onclick="viewAgency('<%= agency.id %>')" class="text-blue-600 hover:text-blue-900 mr-3">View</button>
                                        <button onclick="editAgency('<%= agency.id %>')" class="text-green-600 hover:text-green-900 mr-3">Edit</button>
                                        <button onclick="deleteAgency('<%= agency.id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                <% } else { %>
                    <div class="text-center py-12">
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No agencies yet</h3>
                        <p class="text-gray-500">Start by creating your first agency.</p>
                        <button onclick="openCreateModal()" class="mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                            + Create Agency
                        </button>
                    </div>
                <% } %>
            </div>

        </div>
    </main>

    <!-- Create/Edit Modal -->
    <div id="agency-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg font-bold text-gray-900 mb-4" id="modal-title">Create Agency</h3>
                <form id="agency-form">
                    <input type="hidden" id="agency-id" name="agency_id">
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Owner</label>
                            <select id="owner_id" name="owner_id" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500" required>
                                <option value="">Select Owner</option>
                                <% users.forEach(user => { %>
                                    <option value="<%= user.id %>"><%= user.full_name %> (<%= user.email %>)</option>
                                <% }); %>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Agency Name</label>
                            <input type="text" id="name" name="name" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Slug</label>
                            <input type="text" id="slug" name="slug" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Domain</label>
                            <input type="text" id="domain" name="domain" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Company Name</label>
                            <input type="text" id="company_name" name="company_name" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Tagline</label>
                            <input type="text" id="tagline" name="tagline" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Logo URL</label>
                            <input type="url" id="logo_url" name="logo_url" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Favicon URL</label>
                            <input type="url" id="favicon_url" name="favicon_url" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div class="md:col-span-2">
                            <label class="flex items-center">
                                <input type="checkbox" id="is_active" name="is_active" class="mr-2" checked>
                                <span class="text-sm font-medium text-gray-700">Active</span>
                            </label>
                        </div>
                    </div>
                    
                    <div class="flex justify-end mt-6 space-x-3">
                        <button type="button" onclick="closeModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                            Cancel
                        </button>
                        <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                            Save
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- View Modal -->
    <div id="view-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg font-bold text-gray-900 mb-4">Agency Details</h3>
                <div id="agency-details"></div>
                <div class="flex justify-end mt-6">
                    <button onclick="closeViewModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let isEdit = false;

        function openCreateModal() {
            isEdit = false;
            document.getElementById('modal-title').textContent = 'Create Agency';
            document.getElementById('agency-form').reset();
            document.getElementById('agency-id').value = '';
            document.getElementById('is_active').checked = true;
            document.getElementById('agency-modal').classList.remove('hidden');
        }

        function editAgency(id) {
            isEdit = true;
            document.getElementById('modal-title').textContent = 'Edit Agency';
            
            fetch(`/dashboard/agencies/${id}`)
                .then(response => response.json())
                .then(data => {
                    if (data.agency) {
                        const agency = data.agency;
                        document.getElementById('agency-id').value = agency.id;
                        document.getElementById('owner_id').value = agency.owner_id;
                        document.getElementById('name').value = agency.name;
                        document.getElementById('slug').value = agency.slug;
                        document.getElementById('domain').value = agency.domain || '';
                        document.getElementById('company_name').value = agency.company_name || '';
                        document.getElementById('tagline').value = agency.tagline || '';
                        document.getElementById('logo_url').value = agency.logo_url || '';
                        document.getElementById('favicon_url').value = agency.favicon_url || '';
                        document.getElementById('is_active').checked = agency.is_active;
                        
                        document.getElementById('agency-modal').classList.remove('hidden');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Error loading agency data', 'error');
                });
        }

        function viewAgency(id) {
            fetch(`/dashboard/agencies/${id}`)
                .then(response => response.json())
                .then(data => {
                    if (data.agency) {
                        const agency = data.agency;
                        document.getElementById('agency-details').innerHTML = `
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div><strong>Name:</strong> ${agency.name}</div>
                                <div><strong>Company:</strong> ${agency.company_name || '-'}</div>
                                <div><strong>Owner:</strong> ${agency.owner.full_name}</div>
                                <div><strong>Domain:</strong> ${agency.domain || '-'}</div>
                                <div><strong>Slug:</strong> ${agency.slug}</div>
                                <div><strong>Status:</strong> ${agency.is_active ? 'Active' : 'Inactive'}</div>
                                <div class="md:col-span-2"><strong>Tagline:</strong> ${agency.tagline || '-'}</div>
                                <div><strong>Users:</strong> ${agency.users.length}</div>
                                <div><strong>Subscriptions:</strong> ${agency.subscriptions.length}</div>
                            </div>
                        `;
                        document.getElementById('view-modal').classList.remove('hidden');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Error loading agency data', 'error');
                });
        }

        function deleteAgency(id) {
            if (confirm('Are you sure you want to delete this agency?')) {
                fetch(`/dashboard/agencies/${id}/delete`, {
                    method: 'POST',
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById(`agency-row-${id}`).remove();
                        showAlert(data.message, 'success');
                    } else {
                        showAlert(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('Error deleting agency', 'error');
                });
            }
        }

        function closeModal() {
            document.getElementById('agency-modal').classList.add('hidden');
        }

        function closeViewModal() {
            document.getElementById('view-modal').classList.add('hidden');
        }

        function showAlert(message, type) {
            const alertContainer = document.getElementById('alert-container');
            const alertClass = type === 'success' ? 'bg-green-100 border-green-400 text-green-700' : 'bg-red-100 border-red-400 text-red-700';
            
            alertContainer.innerHTML = `
                <div class="${alertClass} border px-4 py-3 rounded mb-4">
                    ${message}
                </div>
            `;
            
            setTimeout(() => {
                alertContainer.innerHTML = '';
            }, 5000);
        }

        // Form submission
        document.getElementById('agency-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            data.is_active = document.getElementById('is_active').checked;
            
            const url = isEdit ? `/dashboard/agencies/${data.agency_id}` : '/dashboard/agencies';
            const method = 'POST';
            
            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    closeModal();
                    showAlert(data.message, 'success');
                    // Reload page to refresh data
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showAlert(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('Error saving agency', 'error');
            });
        });
    </script>
</body>
</html> 